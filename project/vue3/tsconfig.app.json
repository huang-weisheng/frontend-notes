{
	"$schema": "https://json.schemastore.org/tsconfig",
	"compilerOptions": {
		//不生成文件
		"noEmit": true,
		// 使用ES模块
		"module": "ESNext",
		// 使用 Node.js 的模块解析策略
		"moduleResolution": "bundler",
		//允许你直接导入 JSON 文件作为模块。
		"resolveJsonModule": true,
		// 允许导入扩展名为 .ts 或 .tsx 的文件
		"allowImportingTsExtensions": true,
		// 即使文件没有`import`或`export`,也被视为模块
		"moduleDetection": "force",
		// Vue项目中必需的
		"jsx": "preserve",
		"jsxImportSource": "vue",
		//启用所有严格类型检查选项
		"strict": true,
		// 任何没有类型修饰符 type 的导入或导出都会保留,任何使用类型修饰符的内容都会被完全删除
		"verbatimModuleSyntax": true,
		//对于Vite,实际的编译目标由Vite配置中的`build.target`选项决定
		"target": "ESNext",
		//将跳过对所有声明文件（.d.ts 文件）的类型检查。
		"skipLibCheck": true,
		// 解析非相对模块的基本目录
		"baseUrl": "./",
		// 模块解析路径映射
		"paths": {
			"@/*": [
				"src/*"
			],
			"/*": [
				"public/*"
			]
		},
		// 设置为空以避免意外包含不需要的类型
		"types": [
			// "vite/client"
		],
		// 指定编译器使用的库
		"lib": [
			"ESNext",
			"DOM",
			"DOM.Iterable"
		],
	},
	// 包含的文件
	"include": [
		"src/**/*.d.ts",
		"src/**/*.ts",
		"src/**/*.mts",
		"src/**/*.vue"
	],
	// 针对include包含的文件进行排除
	"exclude": [
		
	]
}
